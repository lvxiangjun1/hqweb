//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// -------------------------------------------------------------
// 
//             Powered By： SR3.1(SmartRobot For SmartPersistenceLayer 3.1) 听棠
//             Created By： Administrator
//             Created Time： 2016/5/11 13:36:27
// 
// -------------------------------------------------------------
namespace Web.BusinessEntity
{
    using System;
    using System.Collections;
    using System.Data;
    using PersistenceLayer;
    
    
    /// <summary>该类的摘要说明</summary>
    [Serializable()]
    public class T_NEWSINFOSEntity : EntityObject
    {
        
        /// <summary>ID</summary>
        public const string @__ID = "ID";
        
        /// <summary>ORGCODE</summary>
        public const string @__ORGCODE = "ORGCODE";
        
        /// <summary>TITLE</summary>
        public const string @__TITLE = "TITLE";
        
        /// <summary>CONTENT</summary>
        public const string @__CONTENT = "CONTENT";
        
        /// <summary>TRANSACTORID</summary>
        public const string @__TRANSACTORID = "TRANSACTORID";
        
        /// <summary>RELEASETIME</summary>
        public const string @__RELEASETIME = "RELEASETIME";
        
        private decimal m_ID;
        
        private string m_ORGCODE;
        
        private string m_TITLE;
        
        private string m_CONTENT;
        
        private string m_TRANSACTORID;
        
        private System.DateTime m_RELEASETIME = DateTime.MinValue;
        
        /// <summary>构造函数</summary>
        public T_NEWSINFOSEntity()
        {
        }
        
        /// <summary>属性ID </summary>
        public decimal ID
        {
            get
            {
                return this.m_ID;
            }
            set
            {
                this.m_ID = value;
            }
        }
        
        /// <summary>属性ORGCODE </summary>
        public string ORGCODE
        {
            get
            {
                return this.m_ORGCODE;
            }
            set
            {
                this.m_ORGCODE = value;
            }
        }
        
        /// <summary>属性TITLE </summary>
        public string TITLE
        {
            get
            {
                return this.m_TITLE;
            }
            set
            {
                this.m_TITLE = value;
            }
        }
        
        /// <summary>属性CONTENT </summary>
        public string CONTENT
        {
            get
            {
                return this.m_CONTENT;
            }
            set
            {
                this.m_CONTENT = value;
            }
        }
        
        /// <summary>属性TRANSACTORID </summary>
        public string TRANSACTORID
        {
            get
            {
                return this.m_TRANSACTORID;
            }
            set
            {
                this.m_TRANSACTORID = value;
            }
        }
        
        /// <summary>属性RELEASETIME </summary>
        public System.DateTime RELEASETIME
        {
            get
            {
                return this.m_RELEASETIME;
            }
            set
            {
                this.m_RELEASETIME = value;
            }
        }
    }
    
    /// T_NEWSINFOSEntity执行类
    public abstract class T_NEWSINFOSEntityAction
    {
        
        private T_NEWSINFOSEntityAction()
        {
        }
        
        public static void Save(T_NEWSINFOSEntity obj)
        {
            if (obj!=null)
            {
                obj.Save();
            }
        }
        
        /// <summary>根据主键获取一个实体</summary>
        public static T_NEWSINFOSEntity RetrieveAT_NEWSINFOSEntity(decimal ID)
        {
            T_NEWSINFOSEntity obj=new T_NEWSINFOSEntity();
            obj.ID=ID;
            obj.Retrieve();
            if (obj.IsPersistent)
            {
                return obj;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static EntityContainer RetrieveT_NEWSINFOSEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(T_NEWSINFOSEntity));
            return rc.AsEntityContainer();
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static DataTable GetT_NEWSINFOSEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(T_NEWSINFOSEntity));
            return rc.AsDataTable();
        }
    }
}
