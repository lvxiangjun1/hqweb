//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// -------------------------------------------------------------
// 
//             Powered By： SR3.1(SmartRobot For SmartPersistenceLayer 3.1) 听棠
//             Created By： Administrator
//             Created Time： 2016/5/9 16:05:19
// 
// -------------------------------------------------------------
namespace Web.BusinessEntity
{
    using System;
    using System.Collections;
    using System.Data;
    using PersistenceLayer;
    
    
    /// <summary>该类的摘要说明</summary>
    [Serializable()]
    public class T_ADVERTISMENTEntity : EntityObject
    {
        
        /// <summary>ID</summary>
        public const string @__ID = "ID";
        
        /// <summary>TITLE</summary>
        public const string @__TITLE = "TITLE";
        
        /// <summary>INTRODUCE</summary>
        public const string @__INTRODUCE = "INTRODUCE";
        
        /// <summary>PICURL</summary>
        public const string @__PICURL = "PICURL";
        
        /// <summary>PICWIDTH</summary>
        public const string @__PICWIDTH = "PICWIDTH";
        
        /// <summary>PICHEIGHT</summary>
        public const string @__PICHEIGHT = "PICHEIGHT";
        
        /// <summary>WEBURL</summary>
        public const string @__WEBURL = "WEBURL";
        
        /// <summary>USERNAME</summary>
        public const string @__USERNAME = "USERNAME";
        
        /// <summary>INSERTTIME</summary>
        public const string @__INSERTTIME = "INSERTTIME";
        
        /// <summary>ISDELETE</summary>
        public const string @__ISDELETE = "ISDELETE";
        
        /// <summary>DELETETIME</summary>
        public const string @__DELETETIME = "DELETETIME";
        
        /// <summary>DELETENAME</summary>
        public const string @__DELETENAME = "DELETENAME";
        
        /// <summary>ADVTYPE</summary>
        public const string @__ADVTYPE = "ADVTYPE";
        
        /// <summary>POSITION</summary>
        public const string @__POSITION = "POSITION";
        
        /// <summary>TOPPIX</summary>
        public const string @__TOPPIX = "TOPPIX";
        
        private string m_ID;
        
        private string m_TITLE;
        
        private string m_INTRODUCE;
        
        private string m_PICURL;
        
        private decimal m_PICWIDTH;
        
        private decimal m_PICHEIGHT;
        
        private string m_WEBURL;
        
        private string m_USERNAME;
        
        private System.DateTime m_INSERTTIME = DateTime.MinValue;
        
        private string m_ISDELETE;
        
        private System.DateTime m_DELETETIME = DateTime.MinValue;
        
        private string m_DELETENAME;
        
        private decimal m_ADVTYPE;
        
        private decimal m_POSITION;
        
        private decimal m_TOPPIX;
        
        /// <summary>构造函数</summary>
        public T_ADVERTISMENTEntity()
        {
        }
        
        /// <summary>属性ID </summary>
        public string ID
        {
            get
            {
                return this.m_ID;
            }
            set
            {
                this.m_ID = value;
            }
        }
        
        /// <summary>属性TITLE </summary>
        public string TITLE
        {
            get
            {
                return this.m_TITLE;
            }
            set
            {
                this.m_TITLE = value;
            }
        }
        
        /// <summary>属性INTRODUCE </summary>
        public string INTRODUCE
        {
            get
            {
                return this.m_INTRODUCE;
            }
            set
            {
                this.m_INTRODUCE = value;
            }
        }
        
        /// <summary>属性PICURL </summary>
        public string PICURL
        {
            get
            {
                return this.m_PICURL;
            }
            set
            {
                this.m_PICURL = value;
            }
        }
        
        /// <summary>属性PICWIDTH </summary>
        public decimal PICWIDTH
        {
            get
            {
                return this.m_PICWIDTH;
            }
            set
            {
                this.m_PICWIDTH = value;
            }
        }
        
        /// <summary>属性PICHEIGHT </summary>
        public decimal PICHEIGHT
        {
            get
            {
                return this.m_PICHEIGHT;
            }
            set
            {
                this.m_PICHEIGHT = value;
            }
        }
        
        /// <summary>属性WEBURL </summary>
        public string WEBURL
        {
            get
            {
                return this.m_WEBURL;
            }
            set
            {
                this.m_WEBURL = value;
            }
        }
        
        /// <summary>属性USERNAME </summary>
        public string USERNAME
        {
            get
            {
                return this.m_USERNAME;
            }
            set
            {
                this.m_USERNAME = value;
            }
        }
        
        /// <summary>属性INSERTTIME </summary>
        public System.DateTime INSERTTIME
        {
            get
            {
                return this.m_INSERTTIME;
            }
            set
            {
                this.m_INSERTTIME = value;
            }
        }
        
        /// <summary>属性ISDELETE </summary>
        public string ISDELETE
        {
            get
            {
                return this.m_ISDELETE;
            }
            set
            {
                this.m_ISDELETE = value;
            }
        }
        
        /// <summary>属性DELETETIME </summary>
        public System.DateTime DELETETIME
        {
            get
            {
                return this.m_DELETETIME;
            }
            set
            {
                this.m_DELETETIME = value;
            }
        }
        
        /// <summary>属性DELETENAME </summary>
        public string DELETENAME
        {
            get
            {
                return this.m_DELETENAME;
            }
            set
            {
                this.m_DELETENAME = value;
            }
        }
        
        /// <summary>属性ADVTYPE </summary>
        public decimal ADVTYPE
        {
            get
            {
                return this.m_ADVTYPE;
            }
            set
            {
                this.m_ADVTYPE = value;
            }
        }
        
        /// <summary>属性POSITION </summary>
        public decimal POSITION
        {
            get
            {
                return this.m_POSITION;
            }
            set
            {
                this.m_POSITION = value;
            }
        }
        
        /// <summary>属性TOPPIX </summary>
        public decimal TOPPIX
        {
            get
            {
                return this.m_TOPPIX;
            }
            set
            {
                this.m_TOPPIX = value;
            }
        }
    }
    
    /// T_ADVERTISMENTEntity执行类
    public abstract class T_ADVERTISMENTEntityAction
    {
        
        private T_ADVERTISMENTEntityAction()
        {
        }
        
        public static void Save(T_ADVERTISMENTEntity obj)
        {
            if (obj!=null)
            {
                obj.Save();
            }
        }
        
        /// <summary>根据主键获取一个实体</summary>
        public static T_ADVERTISMENTEntity RetrieveAT_ADVERTISMENTEntity(string ID)
        {
            T_ADVERTISMENTEntity obj=new T_ADVERTISMENTEntity();
            obj.ID=ID;
            obj.Retrieve();
            if (obj.IsPersistent)
            {
                return obj;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static EntityContainer RetrieveT_ADVERTISMENTEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(T_ADVERTISMENTEntity));
            return rc.AsEntityContainer();
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static DataTable GetT_ADVERTISMENTEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(T_ADVERTISMENTEntity));
            return rc.AsDataTable();
        }
    }
}
